name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no root@88.222.245.88 'echo "SSH connection successful!"'

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no root@88.222.245.88 << 'EOF'
            # Define directories
            REPO_DIR=/bill-tracker

            # Check if the directory exists; if not, create it
            [ ! -d $REPO_DIR ] && mkdir -p $REPO_DIR
            
            # Navigate to the repository directory
            cd $REPO_DIR || { echo "Failed to change directory"; exit 1; }

            # Check if the directory is a git repository
            if [ ! -d .git ]; then
              # Clone the repository if not a git repository
              git clone https://github.com/Kim-Avillanosa/bill-tracker.git .  # Replace with actual repository URL
            else
              # Pull the latest changes if it is a git repository
              git pull origin main || { echo "Git pull failed"; exit 1; }
            fi

            # Check if MySQL container is running
            if [ "$(docker ps -q -f name=mysql)" ]; then
              echo "MySQL container is already running. Restarting services..."
            else
              echo "MySQL container not found. Starting MySQL service..."
            fi

            # Deploy API
            cd api || { echo "Failed to change to API directory"; exit 1; }
            docker-compose down || { echo "Docker-compose down failed"; exit 1; }
            docker-compose up -d --build || { echo "Docker-compose up failed"; exit 1; }

            # Deploy App
            cd ../app || { echo "Failed to change to App directory"; exit 1; }
            docker-compose down || { echo "Docker-compose down failed"; exit 1; }
            docker-compose up -d --build || { echo "Docker-compose up failed"; exit 1; }
          EOF
